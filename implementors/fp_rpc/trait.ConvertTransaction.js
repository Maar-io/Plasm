(function() {var implementors = {};
implementors["plasm_runtime"] = [{"text":"impl ConvertTransaction&lt;UncheckedExtrinsic&lt;&lt;Module&lt;<a class=\"struct\" href=\"plasm_runtime/struct.Runtime.html\" title=\"struct plasm_runtime::Runtime\">Runtime</a>&gt; as StaticLookup&gt;::Source, <a class=\"enum\" href=\"plasm_runtime/enum.Call.html\" title=\"enum plasm_runtime::Call\">Call</a>, MultiSignature, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>CheckSpecVersion&lt;<a class=\"struct\" href=\"plasm_runtime/struct.Runtime.html\" title=\"struct plasm_runtime::Runtime\">Runtime</a>&gt;, CheckTxVersion&lt;<a class=\"struct\" href=\"plasm_runtime/struct.Runtime.html\" title=\"struct plasm_runtime::Runtime\">Runtime</a>&gt;, CheckGenesis&lt;<a class=\"struct\" href=\"plasm_runtime/struct.Runtime.html\" title=\"struct plasm_runtime::Runtime\">Runtime</a>&gt;, CheckMortality&lt;<a class=\"struct\" href=\"plasm_runtime/struct.Runtime.html\" title=\"struct plasm_runtime::Runtime\">Runtime</a>&gt;, CheckNonce&lt;<a class=\"struct\" href=\"plasm_runtime/struct.Runtime.html\" title=\"struct plasm_runtime::Runtime\">Runtime</a>&gt;, CheckWeight&lt;<a class=\"struct\" href=\"plasm_runtime/struct.Runtime.html\" title=\"struct plasm_runtime::Runtime\">Runtime</a>&gt;, ChargeTransactionPayment&lt;<a class=\"struct\" href=\"plasm_runtime/struct.Runtime.html\" title=\"struct plasm_runtime::Runtime\">Runtime</a>&gt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;&gt; for <a class=\"struct\" href=\"plasm_runtime/struct.TransactionConverter.html\" title=\"struct plasm_runtime::TransactionConverter\">TransactionConverter</a>","synthetic":false,"types":["plasm_runtime::TransactionConverter"]},{"text":"impl ConvertTransaction&lt;OpaqueExtrinsic&gt; for <a class=\"struct\" href=\"plasm_runtime/struct.TransactionConverter.html\" title=\"struct plasm_runtime::TransactionConverter\">TransactionConverter</a>","synthetic":false,"types":["plasm_runtime::TransactionConverter"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()